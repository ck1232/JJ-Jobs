<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jj.jobs.dao.TransactionPaymentInfoOptionMapper">
  <resultMap id="BaseResultMap" type="com.jj.jobs.model.TransactionPaymentInfoOption">
    <id column="transactionId" jdbcType="VARCHAR" property="transactionid" />
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="optionName" jdbcType="VARCHAR" property="optionname" />
    <result column="optionValue" jdbcType="VARCHAR" property="optionvalue" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transactionId, name, optionName, optionValue, createdon
  </sql>
  <select id="selectByExample" parameterType="com.jj.jobs.model.TransactionPaymentInfoOptionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_payment_info_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.jj.jobs.model.TransactionPaymentInfoOptionKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction_payment_info_option
    where transactionId = #{transactionid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jj.jobs.model.TransactionPaymentInfoOptionKey">
    delete from transaction_payment_info_option
    where transactionId = #{transactionid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jj.jobs.model.TransactionPaymentInfoOptionExample">
    delete from transaction_payment_info_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jj.jobs.model.TransactionPaymentInfoOption">
    insert into transaction_payment_info_option (transactionId, name, optionName, 
      optionValue, createdon)
    values (#{transactionid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{optionname,jdbcType=VARCHAR}, 
      #{optionvalue,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jj.jobs.model.TransactionPaymentInfoOption">
    insert into transaction_payment_info_option
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionid != null">
        transactionId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="optionname != null">
        optionName,
      </if>
      <if test="optionvalue != null">
        optionValue,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionid != null">
        #{transactionid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="optionname != null">
        #{optionname,jdbcType=VARCHAR},
      </if>
      <if test="optionvalue != null">
        #{optionvalue,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jj.jobs.model.TransactionPaymentInfoOptionExample" resultType="java.lang.Integer">
    select count(*) from transaction_payment_info_option
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transaction_payment_info_option
    <set>
      <if test="record.transactionid != null">
        transactionId = #{record.transactionid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.optionname != null">
        optionName = #{record.optionname,jdbcType=VARCHAR},
      </if>
      <if test="record.optionvalue != null">
        optionValue = #{record.optionvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transaction_payment_info_option
    set transactionId = #{record.transactionid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      optionName = #{record.optionname,jdbcType=VARCHAR},
      optionValue = #{record.optionvalue,jdbcType=VARCHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jj.jobs.model.TransactionPaymentInfoOption">
    update transaction_payment_info_option
    <set>
      <if test="optionname != null">
        optionName = #{optionname,jdbcType=VARCHAR},
      </if>
      <if test="optionvalue != null">
        optionValue = #{optionvalue,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
    </set>
    where transactionId = #{transactionid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jj.jobs.model.TransactionPaymentInfoOption">
    update transaction_payment_info_option
    set optionName = #{optionname,jdbcType=VARCHAR},
      optionValue = #{optionvalue,jdbcType=VARCHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP}
    where transactionId = #{transactionid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
</mapper>