<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jj.jobs.dao.TransactionCouponDetailMapper">
  <resultMap id="BaseResultMap" type="com.jj.jobs.model.TransactionCouponDetail">
    <id column="transactionId" jdbcType="VARCHAR" property="transactionid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="amountcurrency" jdbcType="VARCHAR" property="amountcurrency" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transactionId, type, id, amount, amountcurrency, createdon
  </sql>
  <select id="selectByExample" parameterType="com.jj.jobs.model.TransactionCouponDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_coupon_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction_coupon_detail
    where transactionId = #{transactionid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from transaction_coupon_detail
    where transactionId = #{transactionid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jj.jobs.model.TransactionCouponDetailExample">
    delete from transaction_coupon_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jj.jobs.model.TransactionCouponDetail">
    insert into transaction_coupon_detail (transactionId, type, id, 
      amount, amountcurrency, createdon
      )
    values (#{transactionid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{amountcurrency,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jj.jobs.model.TransactionCouponDetail">
    insert into transaction_coupon_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionid != null">
        transactionId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="amountcurrency != null">
        amountcurrency,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionid != null">
        #{transactionid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="amountcurrency != null">
        #{amountcurrency,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jj.jobs.model.TransactionCouponDetailExample" resultType="java.lang.Integer">
    select count(*) from transaction_coupon_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transaction_coupon_detail
    <set>
      <if test="record.transactionid != null">
        transactionId = #{record.transactionid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.amountcurrency != null">
        amountcurrency = #{record.amountcurrency,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transaction_coupon_detail
    set transactionId = #{record.transactionid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      amountcurrency = #{record.amountcurrency,jdbcType=VARCHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jj.jobs.model.TransactionCouponDetail">
    update transaction_coupon_detail
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="amountcurrency != null">
        amountcurrency = #{amountcurrency,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
    </set>
    where transactionId = #{transactionid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jj.jobs.model.TransactionCouponDetail">
    update transaction_coupon_detail
    set type = #{type,jdbcType=VARCHAR},
      id = #{id,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      amountcurrency = #{amountcurrency,jdbcType=VARCHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP}
    where transactionId = #{transactionid,jdbcType=VARCHAR}
  </update>
</mapper>